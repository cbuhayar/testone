<?php
/**
 *
 * Common functions used throughout the website
 *
 * All rights reserved. For license information, contact Synotac Design at
 * http://www.synotac.com
 *
 * @package Core
 * @copyright Copyright 2008 by Synotac Design LLC
 * @version $Id: common.php 55 2008-03-13 19:28:14Z bill $
 *
 */

  /**
   * Sanitize GET or POST variables and return in an array
   *
   * @param string $type 'p' for POST variables (default), 'g' for GET variables
   * @return array associative array of sanitized variables
   */
  function get_gp_vars($type = 'p') {
    $vars = array();
    $gp_vars = $type == 'g' ? $_GET : $_POST;
    foreach($gp_vars as $key => $val) {
      if (is_array($val)) {
          $clean_val = array();
          foreach ($val as $k => $v) {
            $clean_val[$k] = clean_input($v);
          }
          $val = $clean_val;
      } else {
        $val = clean_input($val);
      }
      $vars[clean_input($key)] = $val;
    }

    return $vars;
  }  // end get_gp_vars()

  /**
   * Sanitize an input string by stripping slashes if needed
   * @param string $str input string to sanitize
   * @return string sanitized string
   */
  function clean_input($str) {
    // get rid of magic quotes if on
    if (get_magic_quotes_gpc()) {
      $str = stripslashes($str);
    }

    return trim($str);
  }  // end clean_input()


  /**
   *  Build URL with SID if needed
   *
   * Build a URL suitable for an anchor or image tag, possibly with encoded
   * variables. The passed in URL is relative to the web root. A fully
   * qualified URL is generated by prepending either "http" or "https" depending
   * on the $ssl boolean followed by the WEB_ROOT defined constant.
   *
   * Variable-value pairs are passed in the $parms parameter as either a
   * string or an associative array of variable names and values.
   *
   * If the parameter is a string, it is just appended without further
   * processing to the URL; i.e. there is no url_encoding.
   *
   * If the parameter is an array, the values are url_encoded and the name-value
   * pairs are appended to the URL. The form of the variable connector is either
   * a regular ampersand for URLs used in redirections or the ampersand
   * html entity for ones used as hrefs on a web page.
   *
   * @param string $relative_url
   * @param string $parms
   * @param array $parms
   * @param boolean $redirect
   * @param boolean $ssl
   * @return string URL with encoded variables
   *
   */
  function build_url($url, $parms = '', $redirect = false, $ssl = false) {
    $url_conn = '?';
    $http_root = $ssl ? HTTPS_ROOT : HTTP_ROOT;
    $url_out = $http_root . WEB_ROOT . $url;
    if (defined('SID') && (SID <> '')) {
      $url_out .= '?' . strip_tags(SID);
      $url_conn = $redirect ? '&' : '&amp;';
    }
    if ($parms == '') return $url_out;
    $url_out .= $url_conn;
    $url_conn = $redirect ? '&' : '&amp;';
    if (!is_array($parms)) {
      if ($redirect) $parms = htmlspecialchars($parms);
      return $url_out . $parms;
    }
    $parm_out = array();
    foreach($parms as $p_key => $p_val) {
      $parm_out[] = $p_key . '=' . htmlspecialchars($p_val);
    }

    $str = $url_out . implode($url_conn, $parm_out);
    return $str;
  }   // end build_url()

?>
